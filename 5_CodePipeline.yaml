AWSTemplateFormatVersion: 2010-09-09
Description: Template to create CodePipeline

# Parameters:
  # Email:
  #   Description: Email address where CodePipeline sends pipeline notifications
  #   Type: String 

Resources:
  # CodePipelineSNSTopic:
  #   Type: AWS::SNS::Topic
  #   Properties:
  #     Subscription:
  #       - Endpoint: !Ref Email
  #         Protocol: email

  CodePipelineAppRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: CodePipelineAppRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CodePipelineAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - !Sub 
                    - arn:aws:s3:::${PipelineArtifactBucket}/*
                    - PipelineArtifactBucket: !ImportValue PipelineArtifactBucket
                  - !Sub 
                    - arn:aws:s3:::${PipelineArtifactBucket}
                    - PipelineArtifactBucket: !ImportValue PipelineArtifactBucket
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                  - "codecommit:UploadArchive"
                Resource: !Sub
                  - arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${DevOpsCodePipelineRepoName}
                  - DevOpsCodePipelineRepoName: !ImportValue DevOpsCodePipelineRepoName
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${BuildProjectName}
                    - BuildProjectName: !ImportValue BuildProjectName
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${BuildProjectName}:*
                    - BuildProjectName: !ImportValue BuildProjectName
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'

  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub DevOpsCICDPipeline
      RoleArn: !GetAtt [ CodePipelineAppRole, Arn ]
      Stages:
        - Name: Source
          Actions:
            - Name: ApplicationSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: ApplicationOutput
              Configuration:
                BranchName: master
                RepositoryName: !ImportValue DevOpsCodePipelineRepoName
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: ApplicationOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: CodeBuildArtifact
              Configuration:
                ProjectName: !ImportValue BuildProjectName
              RunOrder: 1

        - Name: Deploy_TO_DEV
          Actions:
           - Name: DeployDev
          ActionTypeID:
            Category: Deploy
            Owner: ANS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts: []
          InputArtifacts:
            - Name: Source-Artifacts
          Configuration:
           ActionMode: CREATE UPDATE
          Capabilities: 'CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND'
          RoleArn: !Sub arn:aws:iam::${TargetAccountDev}:role/${Teamilane}-cloudformation-execution-v2
          StackName: !Sub ${Teamwane}-devi=k
          TemplatePath: Source-Artifacts:CICDCodePipelineCF/sqs-cfn.yaml
          TemplateConfiguration: !Sub Source-Artifacts::ac/Environments/dev/dev-kes-vars.json
    RoleArn: !Sub arn:aws:iam::${TangetAccountDey}:role/${Teamtlane}-pipeline-crossaccount-role
    Runorder: 2


              - Name: DeployToDev
                Actions:
            - Name: DeployToDev
              InputArtifacts:
                - Name: CodeBuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ApplicationName: !ImportValue CodeDeployApp
              RunOrder: 1
        - Name: ManualApproval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              # Configuration:
              #   NotificationArn: !Ref CodePipelineSNSTopic
              #   CustomData: Approve Production deployment
              RunOrder: 1
        # - Name: DeployToProd
        #   Actions:
        #     - Name: DeployToProd
        #       InputArtifacts:
        #         - Name: CodeBuildArtifact
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: 1
        #         Provider: CodeDeploy
        #       Configuration:
        #         ApplicationName: !ImportValue CodeDeployApplication
        #         DeploymentGroupName: !ImportValue CodeDeployProdDeploymentGroup
        #       RunOrder: 1

      ArtifactStore:
        Type: S3
        Location: !ImportValue PipelineArtifactBucket